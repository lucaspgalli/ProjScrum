-- -----------------------------------------------------
-- Table `usuarios`
-- -----------------------------------------------------
CREATE TABLE usuarios (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  nome TEXT NOT NULL,
  email TEXT NOT NULL UNIQUE,
  senha TEXT NOT NULL,
  imagem TEXT,
  cargo TEXT CHECK (cargo IN ('Usuário', 'Gerente', 'Admin')) NOT NULL DEFAULT 'Usuário',
  data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
  ultimo_login DATETIME
);

-- -----------------------------------------------------
-- Table `projetos`
-- -----------------------------------------------------
CREATE TABLE projetos (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  projectName TEXT NOT NULL,
  projectDesc TEXT,
  deliveryDate DATE NOT NULL,
  criado_por INTEGER NOT NULL,
  data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (criado_por) REFERENCES usuarios(id)
);

-- -----------------------------------------------------
-- Junction table to link users to projects
-- -----------------------------------------------------
CREATE TABLE projeto_usuarios (
  projectId INTEGER NOT NULL,
  userId INTEGER NOT NULL,
  data_adicao DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (projectId, userId),
  FOREIGN KEY (projectId) REFERENCES projetos(id),
  FOREIGN KEY (userId) REFERENCES usuarios(id)
);

-- -----------------------------------------------------
-- Table `sprints`
-- -----------------------------------------------------
CREATE TABLE sprints (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  projectId INTEGER NOT NULL,
  name TEXT NOT NULL,
  deliveryDate DATE NOT NULL,
  criado_por INTEGER NOT NULL,
  data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (projectId) REFERENCES projetos(id),
  FOREIGN KEY (criado_por) REFERENCES usuarios(id)
);

-- -----------------------------------------------------
-- Table `dailys`
-- -----------------------------------------------------
CREATE TABLE dailys (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  projectId INTEGER NOT NULL,
  sprintId INTEGER NOT NULL,
  name TEXT NOT NULL,
  description TEXT,
  deliveryDate DATE NOT NULL,
  tag TEXT CHECK (tag IN ('Pendente', 'Em progresso', 'Concluido')) NOT NULL DEFAULT 'Pendente',
  criado_por INTEGER NOT NULL,
  data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (sprintId) REFERENCES sprints(id) ON DELETE CASCADE,  -- Cascading delete for sprintId
  FOREIGN KEY (projectId) REFERENCES projetos(id) ON DELETE CASCADE,  -- Cascading delete for projectId
  FOREIGN KEY (criado_por) REFERENCES usuarios(id)
);

-- -----------------------------------------------------
-- Table `dailys_finalizadas`
-- -----------------------------------------------------
CREATE TABLE dailys_finalizadas (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  projectId INTEGER NOT NULL,
  sprintId INTEGER NOT NULL,
  name TEXT NOT NULL,
  description TEXT,
  deliveryDate DATE NOT NULL,
  tag TEXT CHECK (tag IN ('Pendente', 'Em progresso', 'Concluido')) NOT NULL DEFAULT 'Concluido',
  finalizado_por INTEGER NOT NULL,  -- User who finalized the daily
  data_finalizacao DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (sprintId) REFERENCES sprints(id) ON DELETE CASCADE,
  FOREIGN KEY (projectId) REFERENCES projetos(id) ON DELETE CASCADE,
  FOREIGN KEY (finalizado_por) REFERENCES usuarios(id)
);